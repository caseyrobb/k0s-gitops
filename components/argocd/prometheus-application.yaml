apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
spec:
  destination:
    namespace: monitoring
    server: https://kubernetes.default.svc
  project: default
  sources:
    - chart: kube-prometheus-stack
      helm:
        skipCrds: true
        values: |
          alertmanager:
            enabled: false
            alertmanagerSpec:
              useExistingSecret: true
          grafana:
            grafana.ini:
              auth.generic_oauth:
                enabled: true
                name: "Keycloak SSO"
                allow_sign_up: true
                issuer: "https://keycloak.redcomet.ca/realms/master"
                client_id: "grafana"
                client_secret: "$__file{/etc/secrets/grafana_keycloak_secret/client_secret}"
                scopes: "openid profile email"
                auth_url: "https://keycloak.redcomet.ca/realms/master/protocol/openid-connect/auth"
                token_url: "https://keycloak.redcomet.ca/realms/master/protocol/openid-connect/token"
                api_url: "https://keycloak.redcomet.ca/realms/master/protocol/openid-connect/userinfo"
                sign_out_redirect_url: "https://grafana.redcomet.ca/"
                email_attribute_path: "email"
                login_attribute_path: "username"
                name_attribute_path: "full_name"
                role_attribute_path: "contains(resource_access.grafana.roles[*], 'grafana-admin') && 'GrafanaAdmin' || contains(resource_access.grafana.roles[*], 'admin') && 'Admin' || contains(resource_access.grafana.roles[*], 'grafana-editor') && 'Editor' || contains(resource_access.grafana.roles[*], 'viewer') && 'Viewer'"
                role_attribute_strict_mode: true
                allow_assign_grafana_admin: true 
            extraSecretMounts:
              - name: auth-generic-oauth-secret-mount
                secretName: grafana-keycloak-secret
                defaultMode: 0440
                mountPath: /etc/secrets/grafana_keycloak_secret
                readOnly: true
            dashboardProviders:
              dashboardproviders.yaml:
                apiVersion: 1
                providers:
                  - name: 'default'
                    orgId: 1
                    folder: ''
                    type: file
                    disableDeletion: false
                    editable: true
                    options:
                      path: /var/lib/grafana/dashboards/default
            dashboards:
              default:
                argocd:
                  url: https://raw.githubusercontent.com/argoproj/argo-cd/refs/heads/master/examples/dashboard.json
                helm-version-check:
                  url: https://raw.githubusercontent.com/caseyrobb/helm-version-check/refs/heads/master/k8s/dashboard.json
                  datasource:
                  - name: DS_PROMETHEUS
                    value: Prometheus
                jellyfin:
                  url: https://raw.githubusercontent.com/rebelcore/jellyfin_grafana/refs/heads/master/dashboards/jellyfin.json
                  datasource:
                  - name: DS_PROMETHEUS
                    value: Prometheus
                metallb:
                  gnetId: 20162
                  revision: 6
                  datasource:
                  - name: DS_PROMETHEUS
                    value: Prometheus
                traefik:
                  gnetId: 17347
                  revision: 9
                version-check:
                  gnetId: 12833
                  revision: 1
                  datasource:
                  - name: DS_VERSION-CHECKER
                    value: Prometheus
                longhorn:
                  gnetId: 16888
                  revision: 9
                keycloak:
                  gnetId: 14390
                  revision: 7
                  datasource:
                  - name: PROMETHEUS_DS
                    value: Prometheus
                unbound:
                  gnetId: 21006
                  revision: 2
                  datasource:
                  - name: DS_PROMETHEUS
                    value: Prometheus
                k8s:
                  gnetId: 15661
                  revision: 2
                  datasource:
                  - name: DS__VICTORIAMETRICS-PROD-ALL
                    value: Prometheus
                mikrotik:
                  gnetId: 13679
                  revision: 22
                  datasource:
                  - name: DS_PROMETHEUS
                    value: Prometheus
            persistence:
              enabled: true
              type: sts
              storageClassName: "longhorn"
              accessModes:
                - ReadWriteOnce
              size: 5Gi
          prometheus:
            prometheusSpec:
              storageSpec:
                volumeClaimTemplate:
                  spec:
                    storageClassName: longhorn
                    accessModes: 
                      - ReadWriteOnce
                    resources:
                      requests:
                        storage: 30Gi
              retention: 10d
              retentionSize: 25GiB
              walCompression: true
              additionalScrapeConfigsSecret:
                name: additional-scrape-configs
                key: additional-scrape-configs.yaml
                enabled: true
      repoURL: https://prometheus-community.github.io/helm-charts
      targetRevision: 77.2.0
    - chart: prometheus-snmp-exporter
      repoURL: https://prometheus-community.github.io/helm-charts
      targetRevision: 9.6.2
    - kustomize:
        namespace: monitoring
      path: components/apps/grafana
      repoURL: https://github.com/caseyrobb/k0s-gitops
      targetRevision: HEAD
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
    syncOptions:
      - CreateNamespace=true
